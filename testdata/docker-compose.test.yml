# This Dockerfile only used for setting up a local Postgres DB for testing
version: "3"

services:
  pocket-http-db-1:
    # # 1. Set to Master once PHD E2E test updated to include latest DB client version changes
    # build: github.com/pokt-foundation/pocket-http-db.git#master
    # # 2. Set to <BRANCH NAME> when incorporating latest changes to PHD client from a PHD feature branch
    build: github.com/pokt-foundation/pocket-http-db.git#update-gigastake-fix
    container_name: pocket-http-db-1
    restart: always
    ports:
      - 8080:8080
    environment:
      PG_USER: postgres
      PG_PASSWORD: pgpassword
      PG_HOST: portal-db
      PG_PORT: 5432
      PG_DATABASE: postgres
      API_KEYS: test_api_key_6789
      APP_ENV: test
    depends_on:
      portal-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  pocket-http-db-2:
    # # 1. Set to Master once PHD E2E test updated to include latest DB client version changes
    # build: github.com/pokt-foundation/pocket-http-db.git#master
    # # 2. Set to <BRANCH NAME> when incorporating latest changes to PHD client from a PHD feature branch
    build: github.com/pokt-foundation/pocket-http-db.git#update-gigastake-fix
    container_name: pocket-http-db-2
    restart: always
    ports:
      - 8081:8080
    environment:
      PG_USER: postgres
      PG_PASSWORD: pgpassword
      PG_HOST: portal-db
      PG_PORT: 5432
      PG_DATABASE: postgres
      API_KEYS: test_api_key_6789
      APP_ENV: test
    depends_on:
      portal-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  portal-db:
    image: pocketfoundation/test-portal-postgres:latest
    container_name: portal-db
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      retries: 5
